apiVersion: v1
kind: ConfigMap
metadata:
  name: odm-db2u-setup-ci
data:
  setup.sh: |
    #!/bin/bash
      set -x
      curl -o /tmp/client.tgz https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/4.10.38/openshift-client-linux.tar.gz
      cd /tmp
      tar -xzf client.tgz
      export PATH=$PATH:/tmp
      oc project db2

      READY=$(oc get pod c-db2ucluster-ci-db2u-0 -n db2 --no-headers | grep "1/1" | wc -l)
      while [ $READY -eq 0 ] 
      do
        sleep 10
        READY=$(oc get pod c-db2ucluster-ci-db2u-0 -n db2 --no-headers | grep "1/1" | wc -l)
      done

    ## wait until the LDAP server is ready
    cat <<EOF >ldapuser.txt
    /opt/ibm/ldap_scripts/addLdapUser.py -u odmadm -p Passw0rd -r user
    EOF

      ldap_pod=$(oc get pods -l role=ldap -o name)
      oc rsh ${ldap_pod} /bin/bash < ldapuser.txt

    ## wait until the DB2 server is ready
    cat <<EOF >db2test.txt
    su - db2inst1
    db2 list db directory
    EOF
      READY=$(oc rsh -c db2u c-db2ucluster-ci-db2u-0 /bin/bash < db2test.txt | grep "Database alias" | grep BLUDB | wc -l)
      while [ $READY -eq 0 ] 
      do
        sleep 10
        READY=$(oc rsh -c db2u c-db2ucluster-ci-db2u-0 /bin/bash < db2test.txt | grep "Database alias" | grep BLUDB | wc -l)
      done
      # database BLUDB is in - wait 2 minutes for Database to settle down
      sleep 120

    cat <<EOF >db2cfg.txt
    su - db2inst1
    db2 create database odmdb automatic storage yes using codeset UTF-8 territory US pagesize 32768;
    db2 connect to odmdb;
    db2 CREATE BUFFERPOOL BP32K SIZE 2000 PAGESIZE 32K;
    db2 CREATE TABLESPACE RESDWTS PAGESIZE 32K BUFFERPOOL BP32K;
    db2 CREATE SYSTEM TEMPORARY TABLESPACE RESDWTMPTS PAGESIZE 32K BUFFERPOOL BP32K;
    db2 grant dbadm on database to user odmadm;
    db2 connect reset;
    EOF

      oc rsh c-db2ucluster-ci-db2u-0 /bin/bash < db2cfg.txt
    exit 0